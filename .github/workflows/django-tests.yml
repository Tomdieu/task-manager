name: Django CI

on:
  push:
    branches: [ main ] # Adjust branch names as needed
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install docker-compose -y

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build and run services
        run: docker-compose -f ./docker-compose.yml up -d --build

      - name: Wait for services to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until docker-compose exec -T db pg_isready -U user -d task_db; do
            sleep 1
          done
          echo "Waiting for Elasticsearch to be ready..."
          until docker-compose exec -T elasticsearch curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'; do
            sleep 1
          done

      - name: Run migrations
        run: docker-compose exec -T web python manage.py migrate

      - name: Run tests
        run: docker-compose exec -T web pytest

      - name: Shut down services
        run: docker-compose down

# name: Django CI

# on:
#   push:
#     branches: [ main ] # Adjust branch names as needed
#   pull_request:
#     branches: [ main ] 

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Run docker-compose
#         uses: hoverkraft-tech/compose-action@v2.0.1
#         with:
#           compose-file: "./docker-compose.yml"

#       - name: Run migrations and tests
#         run: |
#           docker-compose exec web python manage.py migrate
#           docker-compose exec web python manage.py test # Or your test command

#       - name: Stop Services (docker-compose)
#         if: always()
#         run: docker-compose down