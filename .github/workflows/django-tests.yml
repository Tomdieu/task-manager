name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:alpine3.20
        env:
          POSTGRES_DB: task_db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd="pg_isready -U user -d task_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for DB to be ready
      run: |
        until pg_isready -h localhost -U user; do
          sleep 1
        done

    - name: Run migrations
      run: python manage.py migrate

    - name: Run tests
      run: pytest

# name: Django CI

# on:
#   push:
#     branches: [ main ] # Adjust branch names as needed
#   pull_request:
#     branches: [ main ] 

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Run docker-compose
#         uses: hoverkraft-tech/compose-action@v2.0.1
#         with:
#           compose-file: "./docker-compose.yml"

#       - name: Run migrations and tests
#         run: |
#           docker-compose exec web python manage.py migrate
#           docker-compose exec web python manage.py test # Or your test command

#       - name: Stop Services (docker-compose)
#         if: always()
#         run: docker-compose down